{
  "_args": [
    [
      {
        "raw": "gulp-docker",
        "scope": null,
        "escapedName": "gulp-docker",
        "name": "gulp-docker",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/willdmoore/dev/Rivers/PA Cyber/app/api"
    ]
  ],
  "_from": "gulp-docker@latest",
  "_id": "gulp-docker@0.0.12",
  "_inCache": true,
  "_location": "/gulp-docker",
  "_nodeVersion": "5.9.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/gulp-docker-0.0.12.tgz_1459669943566_0.972774718189612"
  },
  "_npmUser": {
    "name": "winton",
    "email": "mail@wintoni.us"
  },
  "_npmVersion": "3.7.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-docker",
    "scope": null,
    "escapedName": "gulp-docker",
    "name": "gulp-docker",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-docker/-/gulp-docker-0.0.12.tgz",
  "_shasum": "1e4d6c4b026f658762f5b7bfed481eaabda77937",
  "_shrinkwrap": null,
  "_spec": "gulp-docker",
  "_where": "/Users/willdmoore/dev/Rivers/PA Cyber/app/api",
  "bugs": {
    "url": "https://github.com/winton/gulp-docker/issues"
  },
  "dependencies": {
    "bluebird": "^2.3.11",
    "coffee-script": "^1.8.0",
    "docker-remote": "",
    "gulp": "^3.8.10",
    "require-directory": "^2.0.0"
  },
  "description": "Gulp tasks for managing Docker images and containers.",
  "devDependencies": {
    "codo": "",
    "jasmine": "^2.1.1"
  },
  "directories": {},
  "dist": {
    "shasum": "1e4d6c4b026f658762f5b7bfed481eaabda77937",
    "tarball": "https://registry.npmjs.org/gulp-docker/-/gulp-docker-0.0.12.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "036ae1a67241d5885f754c30644c3fbb475b4b25",
  "homepage": "https://github.com/winton/gulp-docker#readme",
  "main": "lib/gulp-docker.js",
  "maintainers": [
    {
      "name": "winton",
      "email": "mail@wintoni.us"
    }
  ],
  "name": "gulp-docker",
  "optionalDependencies": {},
  "readme": "# GulpDocker\n\nGulp tasks for managing Docker images and containers.\n\n## Gulpfile\n\nWithin your `Gulpfile`, initialize `GulpDocker` with an instance of gulp and container options:\n\n\tvar gulp       = require(\"gulp\");\n\tvar GulpDocker = require(\"gulp-docker\");\n\n\tnew GulpDocker(gulp, {\n\t\tsidekick: {\n\t\t\tbuild: \"bin/build\"\n\t\t\trun:   \"bin/sidekick\",\n\t\t\tenv:   { ENV: \"production\" },\n\t\t\tgit:   \"git@github.com:winton/sidekick.git#release\",\n\t\t\trepo:  \"quay.io/winton/sidekick\"\n\t\t}\n\t});\n\n## Container Options\n\nEach key of the object is the container name.\n\nEach value of the object is another object with the following possible keys:\n\n* `build` - The command to run within the Docker container after building the image, before pushing (optional).\n* `dockerfile` - The directory to discover the Dockerfile (optional).\n* `env` - Object containing environmental variables (optional).\n* `git` - A git repository URL string (optional).\n* `name` - The name of the container (required).\n* `ports` - An array of port strings in \"[host-port]:[container-port]\" format (optional).\n* `repo` - The Docker repository to push to on build (optional).\n* `run` - The command to run within the Docker container (optional).\n* `tags` - An array of tags to use when pushing the image (required).\n* `volumes` - An array of volume strings in \"[host-dir]:[container-dir]:[rw|ro]\" format (optional).\n\n## Tasks\n\n* `docker:image` - Build and optionally push one or more Docker images.\n* `docker:restart` - Restart one or more Docker containers.\n* `docker:run` - Run one or more Docker containers.\n* `docker:stop` - Stop one or more Docker containers.\n\n## What happens on build?\n\n* Ask user which containers to build and (optionally) push.\n* Clone a pristine copy of the app.\n* Run `docker build` within app directory (`Dockerfile` should be present).\n* Push the Docker image if specified.\n\n## What happens on run?\n\n* Build happens if image is not found (see above).\n* Generate run arguments from container options.\n* Call `docker run` with arguments.\n\n## Dev setup\n\n\tnpm install\n\n## Docs\n\n\tnode_modules/.bin/codo lib\n\topen doc/index.html\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/winton/gulp-docker.git"
  },
  "scripts": {},
  "version": "0.0.12"
}
